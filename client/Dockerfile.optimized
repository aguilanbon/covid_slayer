# Build stage - use Node.js with better compatibility
FROM node:20-slim AS builder

# Install build essentials for native dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy package files and .npmrc
COPY package*.json .npmrc ./

# Clean install with all optional dependencies
RUN rm -rf node_modules package-lock.json || true && \
    npm ci --include=optional --no-audit --no-fund

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM node:20-alpine AS production

# Install serve
RUN npm install -g serve@latest

# Create app directory
WORKDIR /app

# Copy built application
COPY --from=builder /app/dist ./dist

# Use environment variable for port
ENV PORT=3000

# Expose port
EXPOSE $PORT

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:$PORT/ || exit 1

# Start the application
CMD ["sh", "-c", "serve -s dist -l $PORT"]
